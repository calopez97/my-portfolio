---
import Layout from "../layouts/Layout.astro";
import About from '../components/About.astro';
import Experience from "../components/Experience.astro";
import Projects from '../components/Projects.astro';
import Education from '../components/Education.astro';
import Footer from '../components/shared/Footer.astro';
import Header from '../components/shared/Header.astro';
---

<Layout title="Camilo LÃ³pez">
	<main class="relative">
		<div
			class="fixed inset-0 z-30 transition duration-300 lg:absolute bubble"
			id="bubble"
		>
		</div>
		<div
			class="mx-auto min-h-screen max-w-screen-xl px-6 py-12 font-sans md:px-12 md:py-20 lg:px-24 lg:py-0 z-40 relative"
		>
			<div class="lg:flex lg:justify-between lg:gap-4">
				<Header></Header>
				<main id="content" class="pt-24 lg:w-[66%] lg:py-24">
					<About></About>
					<Experience></Experience>
					<Projects></Projects>
					<Education></Education>	
					<Footer></Footer>
				</main>
			</div>
		</div>
	</main>
</Layout>
<script type="text/javascript">


	document.addEventListener("DOMContentLoaded", () => {
		const bubble = document.getElementById("bubble");

		document.addEventListener("mousemove", (event) => {
			const { clientX, clientY } = event;

			// Calcula las coordenadas del centro del div luminoso
			const bubbleRect = bubble.getBoundingClientRect();
			const bubbleCenterX = bubbleRect.left + bubbleRect.width / 2;
			const bubbleCenterY = bubbleRect.top + bubbleRect.height / 2;

			// Calcula la distancia desde el cursor hasta el centro del div luminoso
			const distanceX = clientX - bubbleCenterX;
			const distanceY = clientY - bubbleCenterY;

			// Calcula las coordenadas del gradiente radial
			const gradientX = bubbleRect.width / 2 + distanceX;
			const gradientY = bubbleRect.height / 2 + distanceY;

			// Aplica el gradiente radial al fondo del div luminoso
			bubble.style.background = `radial-gradient(circle at ${gradientX}px ${gradientY}px, #35394380, transparent 45%)`;
		});
	});


	function handleActiveLinkMenu() {
		const secciones = document.querySelectorAll('section');
		const menuItems = document.querySelectorAll('nav.nav ul li a');

		const scrollY = window.scrollY;

		secciones.forEach((seccion, index) => {
			const offsetTop = seccion.offsetTop;

			if (scrollY >= offsetTop - 120 && scrollY < offsetTop + seccion.offsetHeight - 120) {
				menuItems.forEach(item => item.classList.remove('active'));
				menuItems[index].classList.add('active');
			}
		});
	}

	window.addEventListener('scroll', handleActiveLinkMenu);
	window.addEventListener('load', handleActiveLinkMenu);
</script>
